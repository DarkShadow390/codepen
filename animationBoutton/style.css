:root{
    --dimensionW: 20vh;
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

.scene {
    width: var(--dimensionW);
    height: 10vh ;
    perspective: 1000px;
    margin: 10vh auto;
}

.parallelepiped {
    margin-top: calc(var(--dimensionW) * 1.5);
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transition-duration: 0.3s ;
    transition-timing-function: ease-out;
}

.rectangle {
    cursor: pointer;
    position: absolute;
    color: #1d1d1d;
    height:calc(var(--dimensionW) /2);
    width: var(--dimensionW);
    font-family: Roboto;
    font-size: calc(var(--dimensionW) / 6.25);

}

.square {
    cursor: pointer;
    position: absolute;
    height: calc(var(--dimensionW) /2);
    width: calc(var(--dimensionW) /2);
    border: none;
}

#rectTop {
    background-color: brown;
    transform: rotateX(90deg) translateZ(calc(var(--dimensionW) * 0.25) );
}

#rectBottom {
    background-color: #fd96cd;
    transform: rotateX(-90deg) translateZ(calc(var(--dimensionW) * 0.25));
}

#squareRigth {
    background-color: #a096fd;
    transform: rotateY(90deg) translateZ(calc(var(--dimensionW) * 0.25 + var(--dimensionW) / 2));
}

#squareLeft {
    background-color: #2b2563;
    transform: rotateY(-90deg) translateZ(calc(var(--dimensionW) * 0.25));
}

#rectFace {
    background-color: #fde596;
    transform: rotateX(0deg) translateZ(calc(var(--dimensionW) * 0.25)) ;
}

#rectBack {
    background-color: rgb(115, 106, 106);
    transform: rotateX(-180deg) translateZ(calc(var(--dimensionW) * 0.25)) ;

}

.parallelepiped:hover{
    transform: rotate3d(1, 0, 0, 90deg);

}

/* animation  */
.animation{
    animation: animationParallelepiped 6s infinite linear;
}
@keyframes animationParallelepiped {
    from{
        transform: rotate3d(1, 1, 1, 0deg);
    }to{
        transform: rotate3d(1, 1, 1, 360deg);
    }
}
